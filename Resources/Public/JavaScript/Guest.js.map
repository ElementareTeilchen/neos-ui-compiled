{"version":3,"sources":["webpack:///./packages/neos-ui-ckeditor-bindings/src/index.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js"],"names":["Object","defineProperty","window","value","enumerable","writable","configurable","noop","initialize","toggleFormat","createEditor","createCKEditorAPI","CKEDITOR","console","error","editorConfig","currentEditor","handleUserInteractionCallbackFactory","formattingUnderCursor","keys","formattingRules","forEach","formattingRule","key","command","undefined","editor","getCommand","state","style","elementPath","checkActive","Error","setFormattingUnderCursor","disableAutoInline","assign","dtd","$editable","b","big","i","small","tt","abbr","acronym","cite","code","dfn","em","kbd","strong","samp","var","a","bdo","img","q","span","sub","sup","button","label","_editorConfig","formatting","warn","execCommand","fire","operation","dom","finalOptions","propertyName","onChange","contentEditable","inline","on","config","buttons","editorFeature","ui","create","addFeature","handleUserInteraction","once","setCurrentlyEditedPropertyName","getData"],"mappings":"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","file":"JavaScript/Guest.js","sourcesContent":["import guestFrameApi from './guestFrameApi';\n\nObject.defineProperty(window, 'NeosCKEditorApi', {\n    value: guestFrameApi,\n    enumerable: false,\n    writable: false,\n    configurable: true\n});\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/index.js","const noop = {\n    initialize() {},\n    toggleFormat() {},\n    createEditor() {}\n};\n\nconst createCKEditorAPI = CKEDITOR => {\n    if (!CKEDITOR) {\n        console.error('CKEditor not found!');\n\n        //\n        // Return noop to not break things\n        //\n        return noop;\n    }\n\n    // an object with the following keys:\n    // - globalRegistry\n    // - setFormattingUnderCursor\n    // - setCurrentlyEditedPropertyName\n    let editorConfig = null;\n    let currentEditor = null;\n\n    const handleUserInteractionCallbackFactory = editor => () => {\n        const formattingUnderCursor = {};\n        Object.keys(editorConfig.formattingRules).forEach(key => {\n            const formattingRule = editorConfig.formattingRules[key];\n\n            if (formattingRule.command !== undefined) {\n                if (!editor.getCommand(formattingRule.command)) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                formattingUnderCursor[key] = editor.getCommand(formattingRule.command).state;\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!editor.elementPath()) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\n                formattingUnderCursor[key] = style.checkActive(editor.elementPath(), editor);\n                return;\n            }\n\n            throw new Error(`\n                An error occured while checking a format in CK Editor.\n                The description parameter needs to either have a key \"command\" or\n                a key \"style\" - none of which could be found.\n            `);\n        });\n\n        editorConfig.setFormattingUnderCursor(formattingUnderCursor);\n    };\n\n    //\n    // Perform global initialization tasks\n    //\n    CKEDITOR.disableAutoInline = true;\n\n\t//\n\t// Workaround as per http://stackoverflow.com/questions/14575036/enable-ckeditor4-inline-on-span-and-other-inline-tags\n\t// The issue won't be fixed, we have to live with this...\n\t//\n    Object.assign(CKEDITOR.dtd.$editable, {\n        b: true,\n        big: true,\n        i: true,\n        small: true,\n        tt: true,\n        abbr: true,\n        acronym: true,\n        cite: true,\n        code: true,\n        dfn: true,\n        em: true,\n        kbd: true,\n        strong: true,\n        samp: true,\n        var: true,\n        a: true,\n        bdo: true,\n        img: true,\n        q: true,\n        span: true,\n        sub: true,\n        sup: true,\n        button: true,\n        label: true\n    });\n\n    // Public (singleton) API for CK editor\n    return {\n        initialize(_editorConfig) {\n            editorConfig = _editorConfig;\n        },\n\n        toggleFormat(formatting) {\n            const formattingRule = editorConfig.formattingRules[formatting];\n            if (!formattingRule) {\n                console.warn(`Formatting instruction ${formatting} not found.`);\n                return;\n            }\n            if (!currentEditor) {\n                console.warn('Current editor not found!');\n                return;\n            }\n            if (formattingRule.command !== undefined) {\n                if (!currentEditor.getCommand(formattingRule.command)) {\n                    console.warn(`Command ${currentEditor} not found.`);\n                    return;\n                }\n\n                currentEditor.execCommand(formattingRule.command);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!currentEditor.elementPath()) {\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n                const operation = style.checkActive(currentEditor.elementPath(), currentEditor) ?\n                    'removeStyle' : 'applyStyle';\n\n                currentEditor[operation](style);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            throw new Error(`\n                An error occured while applying a format in CK Editor.\n                The description parameter needs to either have a key \"command\",\n                or \"style\" - none of which could be found.\n            `);\n        },\n\n        createEditor(dom, finalOptions, propertyName, onChange) {\n            dom.contentEditable = 'true';\n\n            const editor = CKEDITOR.inline(dom, finalOptions);\n\n            editor.on('loaded', () => {\n                if (editor.config.buttons) {\n                    editor.config.buttons.forEach(button => {\n                        // The next two lines actually do the ACF auto-configuration\n                        const editorFeature = editor.ui.create(button);\n                        editor.addFeature(editorFeature);\n                    });\n                }\n            });\n\n            const handleUserInteraction = handleUserInteractionCallbackFactory(editor);\n\n            editor.once('contentDom', () => {\n                editor.on('focus', () => {\n                    currentEditor = editor;\n                    editorConfig.setCurrentlyEditedPropertyName(propertyName);\n\n                    handleUserInteraction();\n                });\n\n                editor.on('selectionChange', () => {\n                    handleUserInteraction();\n                });\n\n                //\n                // TODO: This should be debounced!\n                //\n                editor.on('change', () => {\n                    onChange(editor.getData());\n                });\n            });\n        }\n    };\n};\n\nexport default createCKEditorAPI(window.CKEDITOR);\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js"],"sourceRoot":""}