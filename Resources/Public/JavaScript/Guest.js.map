{"version":3,"sources":["webpack:///JavaScript/Guest.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/index.js","webpack:///./packages/neos-ui/~/lodash.debounce/index.js?669d","webpack:///./packages/neos-ui/~/lodash.throttle/index.js?469c","webpack:///./packages/neos-ui-ckeditor-bindings/src/ckeditor/removeTags.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/ckeditor/fixPasteIntoInlineElements.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/ckeditor/index.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/ckeditor/neosPlaceholder.js","webpack:///./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_guestFrameApi","_guestFrameApi2","Object","defineProperty","window","value","enumerable","writable","configurable","149","global","debounce","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","result","apply","leadingEdge","timerId","setTimeout","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","clearTimeout","flush","debounced","isInvoking","arguments","this","TypeError","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","type","isObjectLike","isSymbol","objectToString","call","symbolTag","NAN","other","valueOf","replace","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","slice","reIsBadHex","parseInt","freeGlobal","freeSelf","self","root","Function","objectProto","prototype","toString","Math","max","min","Date","265","throttle","311","text","CKEDITOR","filterRules","filter","fragment","htmlParser","fromHtml","writer","basicWriter","applyTo","writeHtml","getHtml","695","_removeTags","_removeTags2","paste","event","editor","editable","dtd","$block","getName","data","dataValue","fire","ranges","getSelection","getRanges","length","range","insertNode","dom","setStart","endContainer","endOffset","select","plugins","add","init","on","696","_neosPlaceholder","_neosPlaceholder2","_fixPasteIntoInlineElements","_fixPasteIntoInlineElements2","697","htmlIsEmptyish","toLowerCase","trim","match","addPlaceholder","mode","dialog","_","currentTop","setHtml","config","neosPlaceholder","addClass","removePlaceholder","hasClass","removeClass","p","autoParagraph","getFirst","createRange","moveToElementEditablePosition","selectRanges","$","click","getPlaceholderCss","onLoad","addCss","element","699","_lodash","_lodash2","_lodash3","_lodash4","_index","_index2","noop","initialize","toggleFormat","createEditor","lastFormattingUnderCursorSerialized","createCKEditorAPI","console","error","editorConfig","currentEditor","handleUserInteractionCallbackFactory","formattingUnderCursor","keys","formattingRules","forEach","key","formattingRule","command","getCommand","state","style","elementPath","checkActive","extractCurrentFormatFn","Error","formattingUnderCursorSerialized","JSON","stringify","setFormattingUnderCursor","disableAutoInline","assign","$editable","b","big","i","small","tt","abbr","acronym","cite","code","dfn","em","kbd","strong","samp","var","a","bdo","img","q","span","sub","sup","button","label","_editorConfig","formatting","formattingOptions","warn","execCommand","operation","applyStyleFn","finalOptions","propertyName","onChange","_this","$inline","tagName","containsBlockLevelChildren","childNodes","some","childNode","onClickRemoveTags","innerHTML","removeEventListener","addEventListener","contentEditable","inline","buttons","editorFeature","ui","create","addFeature","handleUserInteraction","once","setCurrentlyEditedPropertyName","getData"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAAUC,EAAQC,EAASC,GAEhC,YAMA,SAASC,wBAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GCXxF,GAAAG,GAAAL,EAAA,KDSKM,EAAkBL,uBAAuBI,ECP9CE,QAAOC,eAAeC,OAAQ,mBAC1BC,gBACAC,YAAY,EACZC,UAAU,EACVC,cAAc,KDgBZC,IACA,SAAUhB,EAAQC,IEvBxB,SAAAgB,GAkIA,QAAAC,UAAAC,EAAAC,EAAAC,GAuBA,QAAAC,YAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAC,CAKA,OAHAF,GAAAE,EAAAC,OACAC,EAAAN,EACAO,EAAAX,EAAAY,MAAAL,EAAAF,GAIA,QAAAQ,aAAAT,GAMA,MAJAM,GAAAN,EAEAU,EAAAC,WAAAC,aAAAf,GAEAgB,EAAAd,WAAAC,GAAAO,EAGA,QAAAO,eAAAd,GACA,GAAAe,GAAAf,EAAAgB,EACAC,EAAAjB,EAAAM,EACAC,EAAAV,EAAAkB,CAEA,OAAAG,GAAAC,EAAAZ,EAAAa,EAAAH,GAAAV,EAGA,QAAAc,cAAArB,GACA,GAAAe,GAAAf,EAAAgB,EACAC,EAAAjB,EAAAM,CAKA,OAAAD,UAAAW,GAAAD,GAAAlB,GACAkB,EAAA,GAAAG,GAAAD,GAAAG,EAGA,QAAAR,gBACA,GAAAZ,GAAAsB,GACA,OAAAD,cAAArB,GACAuB,aAAAvB,QAGAU,EAAAC,WAAAC,aAAAE,cAAAd,KAGA,QAAAuB,cAAAvB,GAKA,MAJAU,GAAAL,OAIAmB,GAAAtB,EACAH,WAAAC,IAEAE,EAAAE,EAAAC,OACAE,GAGA,QAAAkB,UACApB,SAAAK,GACAgB,aAAAhB,GAEAJ,EAAA,EACAJ,EAAAc,EAAAZ,EAAAM,EAAAL,OAGA,QAAAsB,SACA,MAAAtB,UAAAK,EAAAH,EAAAgB,aAAAD,KAGA,QAAAM,aACA,GAAA5B,GAAAsB,IACAO,EAAAR,aAAArB,EAMA,IAJAE,EAAA4B,UACA1B,EAAA2B,KACAf,EAAAhB,EAEA6B,EAAA,CACA,GAAAxB,SAAAK,EACA,MAAAD,aAAAO,EAEA,IAAAE,EAGA,MADAR,GAAAC,WAAAC,aAAAf,GACAE,WAAAiB,GAMA,MAHAX,UAAAK,IACAA,EAAAC,WAAAC,aAAAf,IAEAU,EAlHA,GAAAL,GACAE,EACAgB,EACAb,EACAG,EACAM,EACAV,EAAA,EACAO,GAAA,EACAK,GAAA,EACAM,GAAA,CAEA,sBAAA5B,GACA,SAAAoC,WAAAC,EA0GA,OAxGApC,GAAAqC,SAAArC,IAAA,EACAsC,SAAArC,KACAe,IAAAf,EAAAe,QACAK,EAAA,WAAApB,GACAsB,EAAAF,EAAAkB,EAAAF,SAAApC,EAAAsB,UAAA,EAAAvB,GAAAuB,EACAI,EAAA,YAAA1B,OAAA0B,YAiGAI,UAAAH,cACAG,UAAAD,YACAC,UA4BA,QAAAO,UAAA9C,GACA,GAAAgD,SAAAhD,EACA,SAAAA,IAAA,UAAAgD,GAAA,YAAAA,GA2BA,QAAAC,cAAAjD,GACA,QAAAA,GAAA,gBAAAA,GAoBA,QAAAkD,UAAAlD,GACA,sBAAAA,IACAiD,aAAAjD,IAAAmD,EAAAC,KAAApD,IAAAqD,EA0BA,QAAAR,UAAA7C,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAkD,SAAAlD,GACA,MAAAsD,EAEA,IAAAR,SAAA9C,GAAA,CACA,GAAAuD,GAAA,kBAAAvD,GAAAwD,QAAAxD,EAAAwD,UAAAxD,CACAA,GAAA8C,SAAAS,KAAA,GAAAA,EAEA,mBAAAvD,GACA,WAAAA,MAEAA,KAAAyD,QAAAC,EAAA,GACA,IAAAC,GAAAC,EAAAC,KAAA7D,EACA,OAAA2D,IAAAG,EAAAD,KAAA7D,GACA+D,EAAA/D,EAAAgE,MAAA,GAAAL,EAAA,KACAM,EAAAJ,KAAA7D,GAAAsD,GAAAtD,EA3WA,GAAA4C,GAAA,sBAGAU,EAAA,IAGAD,EAAA,kBAGAK,EAAA,aAGAO,EAAA,qBAGAL,EAAA,aAGAE,EAAA,cAGAC,EAAAG,SAGAC,EAAA,gBAAA9D,SAAAR,iBAAAQ,EAGA+D,EAAA,gBAAAC,kBAAAxE,iBAAAwE,KAGAC,EAAAH,GAAAC,GAAAG,SAAA,iBAGAC,EAAA3E,OAAA4E,UAOAtB,EAAAqB,EAAAE,SAGA3B,EAAA4B,KAAAC,IACA9C,EAAA6C,KAAAE,IAkBA5C,EAAA,WACA,MAAAqC,GAAAQ,KAAA7C,MA+SA7C,GAAAC,QAAAiB,WF2B8B8C,KAAK/D,EAAU,WAAa,MAAOqD,WAI3DqC,IACA,SAAU3F,EAAQC,IGxZxB,SAAAgB,GAkIA,QAAAC,UAAAC,EAAAC,EAAAC,GAuBA,QAAAC,YAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAC,CAKA,OAHAF,GAAAE,EAAAC,OACAC,EAAAN,EACAO,EAAAX,EAAAY,MAAAL,EAAAF,GAIA,QAAAQ,aAAAT,GAMA,MAJAM,GAAAN,EAEAU,EAAAC,WAAAC,aAAAf,GAEAgB,EAAAd,WAAAC,GAAAO,EAGA,QAAAO,eAAAd,GACA,GAAAe,GAAAf,EAAAgB,EACAC,EAAAjB,EAAAM,EACAC,EAAAV,EAAAkB,CAEA,OAAAG,GAAAC,EAAAZ,EAAAa,EAAAH,GAAAV,EAGA,QAAAc,cAAArB,GACA,GAAAe,GAAAf,EAAAgB,EACAC,EAAAjB,EAAAM,CAKA,OAAAD,UAAAW,GAAAD,GAAAlB,GACAkB,EAAA,GAAAG,GAAAD,GAAAG,EAGA,QAAAR,gBACA,GAAAZ,GAAAsB,GACA,OAAAD,cAAArB,GACAuB,aAAAvB,QAGAU,EAAAC,WAAAC,aAAAE,cAAAd,KAGA,QAAAuB,cAAAvB,GAKA,MAJAU,GAAAL,OAIAmB,GAAAtB,EACAH,WAAAC,IAEAE,EAAAE,EAAAC,OACAE,GAGA,QAAAkB,UACApB,SAAAK,GACAgB,aAAAhB,GAEAJ,EAAA,EACAJ,EAAAc,EAAAZ,EAAAM,EAAAL,OAGA,QAAAsB,SACA,MAAAtB,UAAAK,EAAAH,EAAAgB,aAAAD,KAGA,QAAAM,aACA,GAAA5B,GAAAsB,IACAO,EAAAR,aAAArB,EAMA,IAJAE,EAAA4B,UACA1B,EAAA2B,KACAf,EAAAhB,EAEA6B,EAAA,CACA,GAAAxB,SAAAK,EACA,MAAAD,aAAAO,EAEA,IAAAE,EAGA,MADAR,GAAAC,WAAAC,aAAAf,GACAE,WAAAiB,GAMA,MAHAX,UAAAK,IACAA,EAAAC,WAAAC,aAAAf,IAEAU,EAlHA,GAAAL,GACAE,EACAgB,EACAb,EACAG,EACAM,EACAV,EAAA,EACAO,GAAA,EACAK,GAAA,EACAM,GAAA,CAEA,sBAAA5B,GACA,SAAAoC,WAAAC,EA0GA,OAxGApC,GAAAqC,SAAArC,IAAA,EACAsC,SAAArC,KACAe,IAAAf,EAAAe,QACAK,EAAA,WAAApB,GACAsB,EAAAF,EAAAkB,EAAAF,SAAApC,EAAAsB,UAAA,EAAAvB,GAAAuB,EACAI,EAAA,YAAA1B,OAAA0B,YAiGAI,UAAAH,cACAG,UAAAD,YACAC,UA+CA,QAAAyC,UAAAzE,EAAAC,EAAAC,GACA,GAAAe,IAAA,EACAW,GAAA,CAEA,sBAAA5B,GACA,SAAAoC,WAAAC,EAMA,OAJAE,UAAArC,KACAe,EAAA,WAAAf,OAAAe,UACAW,EAAA,YAAA1B,OAAA0B,YAEA7B,SAAAC,EAAAC,GACAgB,UACAO,QAAAvB,EACA2B,aA6BA,QAAAW,UAAA9C,GACA,GAAAgD,SAAAhD,EACA,SAAAA,IAAA,UAAAgD,GAAA,YAAAA,GA2BA,QAAAC,cAAAjD,GACA,QAAAA,GAAA,gBAAAA,GAoBA,QAAAkD,UAAAlD,GACA,sBAAAA,IACAiD,aAAAjD,IAAAmD,EAAAC,KAAApD,IAAAqD,EA0BA,QAAAR,UAAA7C,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAkD,SAAAlD,GACA,MAAAsD,EAEA,IAAAR,SAAA9C,GAAA,CACA,GAAAuD,GAAA,kBAAAvD,GAAAwD,QAAAxD,EAAAwD,UAAAxD,CACAA,GAAA8C,SAAAS,KAAA,GAAAA,EAEA,mBAAAvD,GACA,WAAAA,MAEAA,KAAAyD,QAAAC,EAAA,GACA,IAAAC,GAAAC,EAAAC,KAAA7D,EACA,OAAA2D,IAAAG,EAAAD,KAAA7D,GACA+D,EAAA/D,EAAAgE,MAAA,GAAAL,EAAA,KACAM,EAAAJ,KAAA7D,GAAAsD,GAAAtD,EAzaA,GAAA4C,GAAA,sBAGAU,EAAA,IAGAD,EAAA,kBAGAK,EAAA,aAGAO,EAAA,qBAGAL,EAAA,aAGAE,EAAA,cAGAC,EAAAG,SAGAC,EAAA,gBAAA9D,SAAAR,iBAAAQ,EAGA+D,EAAA,gBAAAC,kBAAAxE,iBAAAwE,KAGAC,EAAAH,GAAAC,GAAAG,SAAA,iBAGAC,EAAA3E,OAAA4E,UAOAtB,EAAAqB,EAAAE,SAGA3B,EAAA4B,KAAAC,IACA9C,EAAA6C,KAAAE,IAkBA5C,EAAA,WACA,MAAAqC,GAAAQ,KAAA7C,MA6WA7C,GAAAC,QAAA2F,WH4Z8B5B,KAAK/D,EAAU,WAAa,MAAOqD,WAI3DuC,IACA,SAAU7F,EAAQC,GAEvB,YAEAQ,QAAOC,eAAeT,EAAS,cAC3BW,OAAO,IAIXX,EAAQK,QI/1BM,SAACwF,EAAMC,GAKlB,GAAMC,MACAC,EAAS,GAAIF,GAASE,OAAOD,GAC7BE,EAAWH,EAASI,WAAWD,SAASE,SAASN,GACjDO,EAAS,GAAIN,GAASI,WAAWG,WAMvC,OALAL,GAAOM,QAAQL,GACfA,EAASM,UAAUH,GACnBP,EAAOO,EAAOI,UAGPX,EAAKzB,QAAQ,0BAA2B,MJo2B7CqC,IACA,SAAU1G,EAAQC,EAASC,GAEhC,YAUA,SAASC,wBAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GARvFK,OAAOC,eAAeT,EAAS,cAC3BW,OAAO,GKz3BZ,IAAA+F,GAAAzG,EAAA,KL83BK0G,EAAezG,uBAAuBwG,EAK1C1G,GAAQK,QKh4BM,SAAAyF,GACX,QAASc,OAAMC,GACX,GAAMC,GAASD,EAAMC,OACfC,EAAWD,EAAOC,UACxB,KAAKjB,EAASkB,IAAIC,OAAOF,EAASG,WAAY,CAe1CL,EAAM9D,QAEN,IAAM8C,IAAO,EAAAc,EAAAtG,SAAWwG,EAAMM,KAAKC,UAAWtB,EAI9CgB,GAAOO,KAAK,eACZ,IAAMC,GAASR,EAAOS,eAAeC,WACrC,IAAIF,EAAOG,OAAQ,CACf,GAAMC,GAAQJ,EAAO,EAErBI,GAAMC,WAAW,GAAI7B,GAAS8B,IAAI/B,KAAKA,IAEvC6B,EAAMG,SAASH,EAAMI,aAAcJ,EAAMK,WACzCL,EAAMM,SAGV/F,WAAW,iBAAM6E,GAAOO,KAAK,iBAAiB,IAItDvB,EAASmC,QAAQC,IAAI,mCACjBC,KADoD,QAAAA,MAC/CrB,GACDA,EAAOsB,GAAG,QAASxB,YLy4BzByB,IACA,SAAUtI,EAAQC,EAASC,GAEhC,YAcA,SAASC,wBAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFK,OAAOC,eAAeT,EAAS,cAC3BW,OAAO,GM57BZ,IAAA2H,GAAArI,EAAA,KNi8BKsI,EAAoBrI,uBAAuBoI,GMh8BhDE,EAAAvI,EAAA,KNo8BKwI,EAA+BvI,uBAAuBsI,EAI1DxI,GAAQK,QMt8BM,SAAAyF,IACX,EAAAyC,EAAAlI,SAAgByF,IAChB,EAAA2C,EAAApI,SAA2ByF,KN28BzB4C,IACA,SAAU3I,EAAQC,GAEvB,YAEAQ,QAAOC,eAAeT,EAAS,cAC3BW,OAAO,GOl9BZ,IAAMgI,GAAiB,QAAjBA,gBAAiBxB,GACnB,IAAKA,EACD,OAAO,CAGX,IAAIA,EAAKM,OAAS,GACd,OAAO,CAGX,IAAM9G,GAAQwG,EAAK/C,QAAQ,mBAAoB,IAAIwE,cAAcC,MACjE,QACKlI,GACS,SAAVA,GACU,sBAAVA,GACU,gBAAVA,GACU,kBAAVA,GACU,WAAVA,GACU,eAAVA,GACU,UAAVA,GACAA,EAAMmI,MAAM,6BPk9BnB9I,GAAQK,QO98BM,SAAAyF,GACX,QAASiD,gBAAelC,GACpB,GAAMC,GAASD,EAAMC,OACfC,EAAWD,EAAOC,UACxB,IAAKA,GAIe,YAAhBD,EAAOkC,KAAoB,CAG3B,GAAIlD,EAASmD,OAAOC,EAAEC,WAClB,MAGAR,GAAe5B,EAASP,aACxBO,EAASqC,QAAQtC,EAAOuC,OAAOC,iBAC/BvC,EAASwC,SAAS,iBAK9B,QAASC,mBAAkB3C,GACvB,GAAMC,GAASD,EAAMC,OACfC,EAAWD,EAAOC,UACxB,IAAKA,GAIe,YAAhBD,EAAOkC,KAAoB,CAC3B,IAAKjC,EAAS0C,SAAS,eAEnB,MAOJ,IAJA1C,EAAS2C,YAAY,eAIjB5D,EAASkB,IAAID,EAASG,WAAWyC,EAAG,CAQpC,GAPI7C,EAAOuC,OAAOO,cACd7C,EAASqC,QAAQ,gBAEjBrC,EAASqC,QAAQ,IAIjBrC,EAAS8C,WAAY,CACrB,GAAMnC,GAAQZ,EAAOgD,aACrBpC,GAAMqC,8BAA8BhD,EAAS8C,YAAY,GACzD/C,EAAOS,eAAeyC,cAActC,IAExCZ,EAAOC,WAAWkD,EAAEC,YAIpBnD,GAASqC,QAAQ,KAEjB1I,OAAOuB,WAAW,WACd,GAAI8E,EAAS8C,WAAY,CACrB,GAAMnC,GAAQZ,EAAOgD,aACrBpC,GAAMqC,8BAA8BhD,EAAS8C,YAAY,GACzD/C,EAAOS,eAAeyC,cAActC,IAExCZ,EAAOC,WAAWkD,EAAEC,SACrB,IAKfpE,EAASmC,QAAQC,IAAI,oBACjBiC,kBADqC,QAAAA,qBAEjC,MAAO,gCAGXC,OALqC,QAAAA,UAMjCtE,EAASuE,OAAOhH,KAAK8G,sBAGzBhC,KATqC,QAAAA,MAShCrB,GACGA,EAAOuC,OAAOC,kBAEdxC,EAAOsB,GAAG,UAAW,SAAAvB,GACjB,GAAMyD,GAAUxD,EAAOC,UAEnBuD,IAAWA,EAAQb,SAAS,iBAC5B5C,EAAMM,KAAKC,UAAY,MAK/BN,EAAOsB,GAAG,UAAW,SAAAvB,GACjB,IAAIf,EAASmD,OAAOC,EAAEC,WAAtB,CAIA,GAAMpC,GAAWD,EAAOC,UAEnBA,KAID4B,EAAe9B,EAAMM,KAAKC,WAE1B2B,eAAelC,GACRE,EAAS0C,SAAS,gBAEzB1C,EAAS2C,YAAY,mBAI7B5C,EAAOsB,GAAG,OAAQW,gBAClBjC,EAAOsB,GAAG,OAAQW,gBAClBjC,EAAOsB,GAAG,aAAcW,gBACxBjC,EAAOsB,GAAG,QAASoB,mBACnB1C,EAAOsB,GAAG,mBAAoBoB,yBPo9BxCe,IACA,SAAUxK,EAAQC,EAASC,GAEhC,YAsBA,SAASC,wBAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GApBvFK,OAAOC,eAAeT,EAAS,cAC3BW,OAAO,GQxmCZ,IAAA6J,GAAAvK,EAAA,KR6mCKwK,EAAWvK,uBAAuBsK,GQ5mCvCE,EAAAzK,EAAA,KRgnCK0K,EAAWzK,uBAAuBwK,GQ/mCvCE,EAAA3K,EAAA,KRmnCK4K,EAAU3K,uBAAuB0K,GQlnCtClE,EAAAzG,EAAA,KRsnCK0G,EAAezG,uBAAuBwG,GQpnCrCoE,GACFC,WADS,QAAAA,gBAETC,aAFS,QAAAA,kBAGTC,aAHS,QAAAA,mBAQTC,EAAsC,GAEpCC,EAAoB,QAApBA,mBAAoBrF,GACtB,IAAKA,EAMD,MALAsF,SAAQC,MAAM,uBAKPP,GAGX,EAAAD,EAAAxK,SAA4ByF,EAM5B,IAAIwF,GAAe,KACfC,EAAgB,KAEdC,EAAuC,QAAvCA,sCAAuC1E,GAAA,MAAU,YACnD,GAAM2E,KACNjL,QAAOkL,KAAKJ,EAAaK,iBAAiBC,QAAQ,SAAAC,GAC9C,GAAMC,GAAiBR,EAAaK,gBAAgBE,EAEpD,IAA+BlK,SAA3BmK,EAAeC,QACf,MAAKjF,GAAOkF,WAAWF,EAAeC,cAKtCN,EAAsBI,GAAO/E,EAAOkF,WAAWF,EAAeC,SAASE,YAJnER,EAAsBI,IAAO,EAQrC,IAA6BlK,SAAzBmK,EAAeI,MAAqB,CACpC,IAAKpF,EAAOqF,cAER,YADAV,EAAsBI,IAAO,EAIjC,IAAMK,GAAQ,GAAIpG,GAASoG,MAAMJ,EAAeI,MAGhD,aADAT,EAAsBI,GAAOK,EAAME,YAAYtF,EAAOqF,cAAerF,IAIzE,GAAIgF,EAAeO,uBAEf,YADAZ,EAAsBI,GAAOC,EAAeO,uBAAuBvF,EAAQhB,GAI/E,MAAM,IAAIwG,OAAJ,gRAOV,IAAMC,GAAkCC,KAAKC,UAAUhB,EACnDc,KAAoCrB,IACpCI,EAAaoB,yBAAyBjB,GACtCP,EAAsCqB,IAyC9C,OAlCAzG,GAAS6G,mBAAoB,EAM7BnM,OAAOoM,OAAO9G,EAASkB,IAAI6F,WACvBC,GAAG,EACHC,KAAK,EACLC,GAAG,EACHC,OAAO,EACPC,IAAI,EACJC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,KAAK,EACLC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,GAAG,EACHC,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,QAAQ,EACRC,OAAO,KAKPtD,WADG,QAAAA,YACQuD,GACPhD,EAAegD,GAGnBtD,aALG,QAAAA,cAKUuD,GAAoC,GAAxBC,GAAwBpL,UAAAqE,OAAA,GAAA9F,SAAAyB,UAAA,GAAAA,UAAA,MACvC0I,EAAiBR,EAAaK,gBAAgB4C,EACpD,KAAKzC,EAED,WADAV,SAAQqD,KAAR,0BAAuCF,EAAvC,cAGJ,KAAKhD,EAED,WADAH,SAAQqD,KAAK,4BAGjB,IAA+B9M,SAA3BmK,EAAeC,QACf,MAAKR,GAAcS,WAAWF,EAAeC,UAK7CR,EAAcmD,YAAY5C,EAAeC,SACzCR,EAAclE,KAAK,cACnBmE,GAAqCD,UANjCH,SAAQqD,KAAR,WAAwBlD,EAAxB,cAUR,IAA6B5J,SAAzBmK,EAAeI,MAAqB,CACpC,IAAKX,EAAcY,cACf,MAGJ,IAAMD,GAAQ,GAAIpG,GAASoG,MAAMJ,EAAeI,OAC1CyC,EAAYzC,EAAME,YAAYb,EAAcY,cAAeZ,GAC7D,cAAgB,YAKpB,OAHAA,GAAcoD,GAAWzC,GACzBX,EAAclE,KAAK,cACnBmE,GAAqCD,KAIzC,GAAIO,EAAe8C,aAKf,MAJA9C,GAAe8C,aAAaJ,EAAmBjD,EAAezF,GAE9DyF,EAAclE,KAAK,cACnBmE,GAAqCD,IAIzC,MAAM,IAAIe,OAAJ,mPAOVrB,aAzDG,QAAAA,cAyDUrD,EAAKiH,EAAcC,EAAcC,GAAU,GAAAC,GAAA3L,IACpD,IAAIyC,EAASkB,IAAIiI,QAAQrH,EAAIsH,QAAQtG,eAAgB,CAEjD,GAAMuG,MAAgCxK,MAAMZ,KAAK6D,EAAIwH,YAAYC,KAAK,SAAAC,GAAA,MAAaA,GAAUJ,SAAWpJ,EAASkB,IAAIC,OAAOqI,EAAUJ,QAAQtG,gBAC9I,IAAIuG,EAA4B,CAC5B/D,QAAQqD,KAAK,gBAAiB7G,EAAK,aAAcA,EAAIsH,QAAQtG,cAAe,iMAE5E,IAAM2G,GAAoB,QAApBA,qBACF,GAAM1J,IAAO,EAAAc,EAAAtG,SAAWuH,EAAI4H,UAAW1J,EACvC8B,GAAI4H,UAAY3J,EAChBmJ,EAAK/D,aAAarD,EAAKiH,EAAcC,EAAcC,GAEnDnH,EAAI6H,oBAAoB,QAASF,mBAKrC,YADA3H,GAAI8H,iBAAiB,QAASH,IAItC3H,EAAI+H,gBAAkB,MAEtB,IAAM7I,GAAShB,EAAS8J,OAAOhI,EAAKiH,EAEpC/H,GAAOsB,GAAG,SAAU,WACZtB,EAAOuC,OAAOwG,SACd/I,EAAOuC,OAAOwG,QAAQjE,QAAQ,SAAAwC,GAE1B,GAAM0B,GAAgBhJ,EAAOiJ,GAAGC,OAAO5B,EACvCtH,GAAOmJ,WAAWH,MAK9B,IAAMI,GAAwB1E,EAAqC1E,EAEnEA,GAAOqJ,KAAK,aAAc,WACtBrJ,EAAOsB,GAAG,QAAS,WACfmD,EAAgBzE,EAChBwE,EAAa8E,+BAA+BtB,GAE5CoB,MAGJpJ,EAAOsB,GAAG,kBAAmB,WACzB8H,MAGJpJ,EAAOsB,GAAG,UAAU,EAAAuC,EAAAtK,UAAS,EAAAoK,EAAApK,SAAS,iBAAM0O,GAASjI,EAAOuJ,YAAY,MAAO,UR6nC9FrQ,GAAQK,QQvnCM8K,EAAkBzK,OAAOoF","file":"JavaScript/Guest.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _guestFrameApi = __webpack_require__(699);\n\t\n\tvar _guestFrameApi2 = _interopRequireDefault(_guestFrameApi);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tObject.defineProperty(window, 'NeosCKEditorApi', {\n\t    value: _guestFrameApi2.default,\n\t    enumerable: false,\n\t    writable: false,\n\t    configurable: true\n\t});\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\t\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred invocation.\n\t */\n\tvar now = function() {\n\t  return root.Date.now();\n\t};\n\t\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide `options` to indicate whether `func` should be invoked on the\n\t * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent\n\t * calls to the debounced function return the result of the last `func`\n\t * invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the debounced function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber(wait) || 0;\n\t  if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\t\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\t\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\t\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        result = wait - timeSinceLastCall;\n\t\n\t    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t  }\n\t\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\t\n\t  function timerExpired() {\n\t    var time = now();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\t\n\t  function trailingEdge(time) {\n\t    timerId = undefined;\n\t\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\t\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastInvokeTime = 0;\n\t    lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t  }\n\t\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now());\n\t  }\n\t\n\t  function debounced() {\n\t    var time = now(),\n\t        isInvoking = shouldInvoke(time);\n\t\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\t\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3.2);\n\t * // => 3.2\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3.2');\n\t * // => 3.2\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\tmodule.exports = debounce;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 265:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\t\n\t/** `Object#toString` result references. */\n\tvar symbolTag = '[object Symbol]';\n\t\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\t\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\t\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\t\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\t\n\t/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\t\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred invocation.\n\t */\n\tvar now = function() {\n\t  return root.Date.now();\n\t};\n\t\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide `options` to indicate whether `func` should be invoked on the\n\t * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent\n\t * calls to the debounced function return the result of the last `func`\n\t * invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the debounced function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber(wait) || 0;\n\t  if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\t\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\t\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\t\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        result = wait - timeSinceLastCall;\n\t\n\t    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t  }\n\t\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\t\n\t  function timerExpired() {\n\t    var time = now();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\t\n\t  function trailingEdge(time) {\n\t    timerId = undefined;\n\t\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\t\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastInvokeTime = 0;\n\t    lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t  }\n\t\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now());\n\t  }\n\t\n\t  function debounced() {\n\t    var time = now(),\n\t        isInvoking = shouldInvoke(time);\n\t\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\t\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\t\n\t/**\n\t * Creates a throttled function that only invokes `func` at most once per\n\t * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t * method to cancel delayed `func` invocations and a `flush` method to\n\t * immediately invoke them. Provide `options` to indicate whether `func`\n\t * should be invoked on the leading and/or trailing edge of the `wait`\n\t * timeout. The `func` is invoked with the last arguments provided to the\n\t * throttled function. Subsequent calls to the throttled function return the\n\t * result of the last `func` invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the throttled function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.throttle` and `_.debounce`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to throttle.\n\t * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=true]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new throttled function.\n\t * @example\n\t *\n\t * // Avoid excessively updating the position while scrolling.\n\t * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t *\n\t * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t * jQuery(element).on('click', throttled);\n\t *\n\t * // Cancel the trailing throttled invocation.\n\t * jQuery(window).on('popstate', throttled.cancel);\n\t */\n\tfunction throttle(func, wait, options) {\n\t  var leading = true,\n\t      trailing = true;\n\t\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  if (isObject(options)) {\n\t    leading = 'leading' in options ? !!options.leading : leading;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t  return debounce(func, wait, {\n\t    'leading': leading,\n\t    'maxWait': wait,\n\t    'trailing': trailing\n\t  });\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t}\n\t\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3.2);\n\t * // => 3.2\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3.2');\n\t * // => 3.2\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject(value)) {\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t    value = isObject(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\t\n\tmodule.exports = throttle;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 311:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t/* eslint babel/new-cap: 0 */\n\texports.default = function (text, CKEDITOR) {\n\t    // 2) apply content filtering *with an empty filter rule set*; this will strip out:\n\t    //    - all attributes\n\t    //    - most tags (such as \"b\")\n\t    // For some reason, it does not strip out <p> Tags; not sure why...\n\t    var filterRules = {};\n\t    var filter = new CKEDITOR.filter(filterRules);\n\t    var fragment = CKEDITOR.htmlParser.fragment.fromHtml(text);\n\t    var writer = new CKEDITOR.htmlParser.basicWriter();\n\t    filter.applyTo(fragment);\n\t    fragment.writeHtml(writer);\n\t    text = writer.getHtml();\n\t\n\t    // 3) that's why we finally remove all remaining (opening and closing) tags with a regex.\n\t    return text.replace(/<\\/?[a-z0-9A-Z]+[^>]*>/g, '');\n\t};\n\n/***/ }),\n\n/***/ 695:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _removeTags = __webpack_require__(311);\n\t\n\tvar _removeTags2 = _interopRequireDefault(_removeTags);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* eslint babel/new-cap: 0 */\n\texports.default = function (CKEDITOR) {\n\t    function paste(event) {\n\t        var editor = event.editor;\n\t        var editable = editor.editable();\n\t        if (!CKEDITOR.dtd.$block[editable.getName()]) {\n\t            // for INLINE elements like SPANs, we need to do extra magic to make copy/paste behave well;\n\t            // namely we can only insert plain text instead of styled markup; otherwise CKEditor breaks\n\t            // the editable into two halves, resulting in markup such as:\n\t            //     <span contenteditable=\"true\" property=\"myProp\">before caret</span>\n\t            //     the stuff copy pasted goes here\n\t            //     <span contenteditable=\"true\" property=\"myProp\">after caret</span>\n\t            // ... which of course is totally wrong; breaking inline editing etc etc.\n\t            //\n\t            // The splitting (which breaks our necks) is implemented in \"editable.js\" inside CKEditor; inside the private function \"insert()\".\n\t            // That's why we completely handle the paste manually.\n\t            //\n\t            // As a SOLUTION, we insert plain text into the editable using a quite low-level method - this is what this function does:\n\t\n\t            // 1) cancel the \"paste\" event to be able to handle pasting ourselves\n\t            event.cancel();\n\t\n\t            var text = (0, _removeTags2.default)(event.data.dataValue, CKEDITOR);\n\t\n\t            // 4) do the actual paste; modelled after CKEDITOR.editable.insertHtml().\n\t            // 4a) we store an undo-snapshot\n\t            editor.fire('saveSnapshot');\n\t            var ranges = editor.getSelection().getRanges();\n\t            if (ranges.length) {\n\t                var range = ranges[0];\n\t                // 4b) then we manually insert text -- this works WITHOUT splitting the span into different parts.\n\t                range.insertNode(new CKEDITOR.dom.text(text));\n\t                // 4c) then, we move the cursor to the end of the just inserted text.\n\t                range.setStart(range.endContainer, range.endOffset);\n\t                range.select();\n\t            }\n\t            // 4d) finally, we store another undo snapshot (after the whole execution completed)\n\t            setTimeout(function () {\n\t                return editor.fire('saveSnapshot');\n\t            }, 0);\n\t        }\n\t    }\n\t\n\t    CKEDITOR.plugins.add('neos_fixPasteIntoInlineElements', {\n\t        init: function init(editor) {\n\t            editor.on('paste', paste);\n\t        }\n\t    });\n\t};\n\n/***/ }),\n\n/***/ 696:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _neosPlaceholder = __webpack_require__(697);\n\t\n\tvar _neosPlaceholder2 = _interopRequireDefault(_neosPlaceholder);\n\t\n\tvar _fixPasteIntoInlineElements = __webpack_require__(695);\n\t\n\tvar _fixPasteIntoInlineElements2 = _interopRequireDefault(_fixPasteIntoInlineElements);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (CKEDITOR) {\n\t    (0, _neosPlaceholder2.default)(CKEDITOR);\n\t    (0, _fixPasteIntoInlineElements2.default)(CKEDITOR);\n\t};\n\n/***/ }),\n\n/***/ 697:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// Code from https://github.com/AlfonsoML/confighelper/blob/master/plugin.js originally, with the following (heavy) modifications:\n\t\n\t// If the data is \"empty\" (BR, P) or the placeholder then return an empty string.\n\t// Otherwise return the original data\n\tvar htmlIsEmptyish = function htmlIsEmptyish(data) {\n\t    if (!data) {\n\t        return true;\n\t    }\n\t\n\t    if (data.length > 20) {\n\t        return false;\n\t    }\n\t\n\t    var value = data.replace(/[\\n|\\t|\\u200b]*/g, '').toLowerCase().trim();\n\t    return !value || value === '<br>' || value === '<p>&nbsp;<br></p>' || value === '<p><br></p>' || value === '<p>&nbsp;</p>' || value === '&nbsp;' || value === '&nbsp;<br>' || value === ' <br>' || value.match(/^<([a-z0-9]+)><br><\\/\\1>$/);\n\t};\n\t\n\texports.default = function (CKEDITOR) {\n\t    function addPlaceholder(event) {\n\t        var editor = event.editor;\n\t        var editable = editor.editable();\n\t        if (!editable) {\n\t            return;\n\t        }\n\t\n\t        if (editor.mode === 'wysiwyg') {\n\t            // we only support wysiwyg editor mode\n\t            // If the blur is due to a dialog, don't apply the placeholder\n\t            if (CKEDITOR.dialog._.currentTop) {\n\t                return;\n\t            }\n\t\n\t            if (htmlIsEmptyish(editable.getHtml())) {\n\t                editable.setHtml(editor.config.neosPlaceholder);\n\t                editable.addClass('placeholder');\n\t            }\n\t        }\n\t    }\n\t\n\t    function removePlaceholder(event) {\n\t        var editor = event.editor;\n\t        var editable = editor.editable();\n\t        if (!editable) {\n\t            return;\n\t        }\n\t\n\t        if (editor.mode === 'wysiwyg') {\n\t            if (!editable.hasClass('placeholder')) {\n\t                // no placeholder, so nothing to be removed.\n\t                return;\n\t            }\n\t\n\t            editable.removeClass('placeholder');\n\t\n\t            // IF: editable allows a \"P\" inside, we create a \"newline\".\n\t            // NOTE: this condition might not be good enough; we might need to check for block level elements using CKEDITOR.dtd.$block\n\t            if (CKEDITOR.dtd[editable.getName()].p) {\n\t                if (editor.config.autoParagraph) {\n\t                    editable.setHtml('<p><br/></p>');\n\t                } else {\n\t                    editable.setHtml('');\n\t                }\n\t\n\t                // Set caret in position\n\t                if (editable.getFirst()) {\n\t                    var range = editor.createRange();\n\t                    range.moveToElementEditablePosition(editable.getFirst(), true);\n\t                    editor.getSelection().selectRanges([range]);\n\t                }\n\t                editor.editable().$.click();\n\t            } else {\n\t                // if we are inside an inline editable (e.g. a span), we have to set the selection\n\t                // *using a timeout*, otherwise it won't be selected in Firefox and Chrome.\n\t                editable.setHtml(' ');\n\t\n\t                window.setTimeout(function () {\n\t                    if (editable.getFirst()) {\n\t                        var _range = editor.createRange();\n\t                        _range.moveToElementEditablePosition(editable.getFirst(), true);\n\t                        editor.getSelection().selectRanges([_range]);\n\t                    }\n\t                    editor.editable().$.click();\n\t                }, 5);\n\t            }\n\t        }\n\t    }\n\t\n\t    CKEDITOR.plugins.add('neos_placeholder', {\n\t        getPlaceholderCss: function getPlaceholderCss() {\n\t            return '.placeholder{ color: #999; }';\n\t        },\n\t        onLoad: function onLoad() {\n\t            CKEDITOR.addCss(this.getPlaceholderCss());\n\t        },\n\t        init: function init(editor) {\n\t            if (editor.config.neosPlaceholder) {\n\t                // Watch for the calls to getData to remove the placeholder\n\t                editor.on('getData', function (event) {\n\t                    var element = editor.editable();\n\t\n\t                    if (element && element.hasClass('placeholder')) {\n\t                        event.data.dataValue = '';\n\t                    }\n\t                });\n\t\n\t                // Watch for setData to remove placeholder class\n\t                editor.on('setData', function (event) {\n\t                    if (CKEDITOR.dialog._.currentTop) {\n\t                        return;\n\t                    }\n\t\n\t                    var editable = editor.editable();\n\t\n\t                    if (!editable) {\n\t                        return;\n\t                    }\n\t\n\t                    if (htmlIsEmptyish(event.data.dataValue)) {\n\t                        // if data is empty, set it to the placeholder\n\t                        addPlaceholder(event);\n\t                    } else if (editable.hasClass('placeholder')) {\n\t                        // Remove the class if new data is not empty\n\t                        editable.removeClass('placeholder');\n\t                    }\n\t                });\n\t\n\t                editor.on('mode', addPlaceholder);\n\t                editor.on('blur', addPlaceholder);\n\t                editor.on('contentDom', addPlaceholder);\n\t                editor.on('focus', removePlaceholder);\n\t                editor.on('beforeModeUnload', removePlaceholder);\n\t            }\n\t        }\n\t    });\n\t};\n\n/***/ }),\n\n/***/ 699:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _lodash = __webpack_require__(265);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _lodash3 = __webpack_require__(149);\n\t\n\tvar _lodash4 = _interopRequireDefault(_lodash3);\n\t\n\tvar _index = __webpack_require__(696);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _removeTags = __webpack_require__(311);\n\t\n\tvar _removeTags2 = _interopRequireDefault(_removeTags);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar noop = {\n\t    initialize: function initialize() {},\n\t    toggleFormat: function toggleFormat() {},\n\t    createEditor: function createEditor() {}\n\t};\n\t\n\t// We cache the \"formattingUnderCursor\"; to only emit events when it really changed.\n\t// As there is only a single cursor active at any given time, it is safe to do this caching here inside the singleton object.\n\tvar lastFormattingUnderCursorSerialized = '';\n\t\n\tvar createCKEditorAPI = function createCKEditorAPI(CKEDITOR) {\n\t    if (!CKEDITOR) {\n\t        console.error('CKEditor not found!');\n\t\n\t        //\n\t        // Return noop to not break things\n\t        //\n\t        return noop;\n\t    }\n\t\n\t    (0, _index2.default)(CKEDITOR);\n\t\n\t    // an object with the following keys:\n\t    // - globalRegistry\n\t    // - setFormattingUnderCursor\n\t    // - setCurrentlyEditedPropertyName\n\t    var editorConfig = null;\n\t    var currentEditor = null;\n\t\n\t    var handleUserInteractionCallbackFactory = function handleUserInteractionCallbackFactory(editor) {\n\t        return function () {\n\t            var formattingUnderCursor = {};\n\t            Object.keys(editorConfig.formattingRules).forEach(function (key) {\n\t                var formattingRule = editorConfig.formattingRules[key];\n\t\n\t                if (formattingRule.command !== undefined) {\n\t                    if (!editor.getCommand(formattingRule.command)) {\n\t                        formattingUnderCursor[key] = false;\n\t                        return;\n\t                    }\n\t\n\t                    formattingUnderCursor[key] = editor.getCommand(formattingRule.command).state;\n\t                    return;\n\t                }\n\t\n\t                if (formattingRule.style !== undefined) {\n\t                    if (!editor.elementPath()) {\n\t                        formattingUnderCursor[key] = false;\n\t                        return;\n\t                    }\n\t\n\t                    var style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\t\n\t                    formattingUnderCursor[key] = style.checkActive(editor.elementPath(), editor);\n\t                    return;\n\t                }\n\t\n\t                if (formattingRule.extractCurrentFormatFn) {\n\t                    formattingUnderCursor[key] = formattingRule.extractCurrentFormatFn(editor, CKEDITOR);\n\t                    return;\n\t                }\n\t\n\t                throw new Error('\\n                An error occured while checking a format in CK Editor.\\n                The description parameter needs to either have a key \"command\",\\n                a key \"style\", or a style \"extractCurrentFormatFn\" - none of which could be found.\\n            ');\n\t            });\n\t\n\t            var formattingUnderCursorSerialized = JSON.stringify(formattingUnderCursor);\n\t            if (formattingUnderCursorSerialized !== lastFormattingUnderCursorSerialized) {\n\t                editorConfig.setFormattingUnderCursor(formattingUnderCursor);\n\t                lastFormattingUnderCursorSerialized = formattingUnderCursorSerialized;\n\t            }\n\t        };\n\t    };\n\t\n\t    //\n\t    // Perform global initialization tasks\n\t    //\n\t    CKEDITOR.disableAutoInline = true;\n\t\n\t    //\n\t    // Workaround as per http://stackoverflow.com/questions/14575036/enable-ckeditor4-inline-on-span-and-other-inline-tags\n\t    // The issue won't be fixed, we have to live with this...\n\t    //\n\t    Object.assign(CKEDITOR.dtd.$editable, {\n\t        b: true,\n\t        big: true,\n\t        i: true,\n\t        small: true,\n\t        tt: true,\n\t        abbr: true,\n\t        acronym: true,\n\t        cite: true,\n\t        code: true,\n\t        dfn: true,\n\t        em: true,\n\t        kbd: true,\n\t        strong: true,\n\t        samp: true,\n\t        var: true,\n\t        a: true,\n\t        bdo: true,\n\t        img: true,\n\t        q: true,\n\t        span: true,\n\t        sub: true,\n\t        sup: true,\n\t        button: true,\n\t        label: true\n\t    });\n\t\n\t    // Public (singleton) API for CK editor\n\t    return {\n\t        initialize: function initialize(_editorConfig) {\n\t            editorConfig = _editorConfig;\n\t        },\n\t        toggleFormat: function toggleFormat(formatting) {\n\t            var formattingOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t            var formattingRule = editorConfig.formattingRules[formatting];\n\t            if (!formattingRule) {\n\t                console.warn('Formatting instruction ' + formatting + ' not found.');\n\t                return;\n\t            }\n\t            if (!currentEditor) {\n\t                console.warn('Current editor not found!');\n\t                return;\n\t            }\n\t            if (formattingRule.command !== undefined) {\n\t                if (!currentEditor.getCommand(formattingRule.command)) {\n\t                    console.warn('Command ' + currentEditor + ' not found.');\n\t                    return;\n\t                }\n\t\n\t                currentEditor.execCommand(formattingRule.command);\n\t                currentEditor.fire('change');\n\t                handleUserInteractionCallbackFactory(currentEditor)();\n\t                return;\n\t            }\n\t\n\t            if (formattingRule.style !== undefined) {\n\t                if (!currentEditor.elementPath()) {\n\t                    return;\n\t                }\n\t\n\t                var style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\t                var operation = style.checkActive(currentEditor.elementPath(), currentEditor) ? 'removeStyle' : 'applyStyle';\n\t\n\t                currentEditor[operation](style);\n\t                currentEditor.fire('change');\n\t                handleUserInteractionCallbackFactory(currentEditor)();\n\t                return;\n\t            }\n\t\n\t            if (formattingRule.applyStyleFn) {\n\t                formattingRule.applyStyleFn(formattingOptions, currentEditor, CKEDITOR);\n\t\n\t                currentEditor.fire('change');\n\t                handleUserInteractionCallbackFactory(currentEditor)();\n\t                return;\n\t            }\n\t\n\t            throw new Error('\\n                An error occured while applying a format in CK Editor.\\n                The description parameter needs to either have a key \"command\",\\n                \"style\", or \"applyFn\" - none of which could be found.\\n            ');\n\t        },\n\t        createEditor: function createEditor(dom, finalOptions, propertyName, onChange) {\n\t            var _this = this;\n\t\n\t            if (CKEDITOR.dtd.$inline[dom.tagName.toLowerCase()]) {\n\t                // if we are an inline element, CKEditor breaks if we contain block-level children\n\t                var containsBlockLevelChildren = [].slice.call(dom.childNodes).some(function (childNode) {\n\t                    return childNode.tagName && CKEDITOR.dtd.$block[childNode.tagName.toLowerCase()];\n\t                });\n\t                if (containsBlockLevelChildren) {\n\t                    console.warn('The editable ', dom, ' of type <', dom.tagName.toLowerCase(), '> (which is an inline html element) contains block-level children (like p, div, ...). This is invalid markup and currently not supported by CKEditor; that is why we cannot edit it currently.');\n\t\n\t                    var onClickRemoveTags = function onClickRemoveTags() {\n\t                        var text = (0, _removeTags2.default)(dom.innerHTML, CKEDITOR);\n\t                        dom.innerHTML = text;\n\t                        _this.createEditor(dom, finalOptions, propertyName, onChange);\n\t\n\t                        dom.removeEventListener('click', onClickRemoveTags);\n\t                        // TODO FOCUS EDITOR directly - would be nice!\n\t                    };\n\t\n\t                    dom.addEventListener('click', onClickRemoveTags);\n\t                    return;\n\t                }\n\t            }\n\t            dom.contentEditable = 'true';\n\t\n\t            var editor = CKEDITOR.inline(dom, finalOptions);\n\t\n\t            editor.on('loaded', function () {\n\t                if (editor.config.buttons) {\n\t                    editor.config.buttons.forEach(function (button) {\n\t                        // The next two lines actually do the ACF auto-configuration\n\t                        var editorFeature = editor.ui.create(button);\n\t                        editor.addFeature(editorFeature);\n\t                    });\n\t                }\n\t            });\n\t\n\t            var handleUserInteraction = handleUserInteractionCallbackFactory(editor);\n\t\n\t            editor.once('contentDom', function () {\n\t                editor.on('focus', function () {\n\t                    currentEditor = editor;\n\t                    editorConfig.setCurrentlyEditedPropertyName(propertyName);\n\t\n\t                    handleUserInteraction();\n\t                });\n\t\n\t                editor.on('selectionChange', function () {\n\t                    handleUserInteraction();\n\t                });\n\t\n\t                editor.on('change', (0, _lodash4.default)((0, _lodash2.default)(function () {\n\t                    return onChange(editor.getData());\n\t                }, 1500), 150));\n\t            });\n\t        }\n\t    };\n\t};\n\t\n\texports.default = createCKEditorAPI(window.CKEDITOR);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// JavaScript/Guest.js","import guestFrameApi from './guestFrameApi';\n\nObject.defineProperty(window, 'NeosCKEditorApi', {\n    value: guestFrameApi,\n    enumerable: false,\n    writable: false,\n    configurable: true\n});\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/index.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/neos-ui/~/lodash.debounce/index.js\n// module id = 149\n// module chunks = 1 2","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/neos-ui/~/lodash.throttle/index.js\n// module id = 265\n// module chunks = 1 2","/* eslint babel/new-cap: 0 */\nexport default (text, CKEDITOR) => {\n    // 2) apply content filtering *with an empty filter rule set*; this will strip out:\n    //    - all attributes\n    //    - most tags (such as \"b\")\n    // For some reason, it does not strip out <p> Tags; not sure why...\n    const filterRules = {};\n    const filter = new CKEDITOR.filter(filterRules);\n    const fragment = CKEDITOR.htmlParser.fragment.fromHtml(text);\n    const writer = new CKEDITOR.htmlParser.basicWriter();\n    filter.applyTo(fragment);\n    fragment.writeHtml(writer);\n    text = writer.getHtml();\n\n    // 3) that's why we finally remove all remaining (opening and closing) tags with a regex.\n    return text.replace(/<\\/?[a-z0-9A-Z]+[^>]*>/g, '');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/ckeditor/removeTags.js","import removeTags from './removeTags';\n\n/* eslint babel/new-cap: 0 */\nexport default CKEDITOR => {\n    function paste(event) {\n        const editor = event.editor;\n        const editable = editor.editable();\n        if (!CKEDITOR.dtd.$block[editable.getName()]) {\n            // for INLINE elements like SPANs, we need to do extra magic to make copy/paste behave well;\n            // namely we can only insert plain text instead of styled markup; otherwise CKEditor breaks\n            // the editable into two halves, resulting in markup such as:\n            //     <span contenteditable=\"true\" property=\"myProp\">before caret</span>\n            //     the stuff copy pasted goes here\n            //     <span contenteditable=\"true\" property=\"myProp\">after caret</span>\n            // ... which of course is totally wrong; breaking inline editing etc etc.\n            //\n            // The splitting (which breaks our necks) is implemented in \"editable.js\" inside CKEditor; inside the private function \"insert()\".\n            // That's why we completely handle the paste manually.\n            //\n            // As a SOLUTION, we insert plain text into the editable using a quite low-level method - this is what this function does:\n\n            // 1) cancel the \"paste\" event to be able to handle pasting ourselves\n            event.cancel();\n\n            const text = removeTags(event.data.dataValue, CKEDITOR);\n\n            // 4) do the actual paste; modelled after CKEDITOR.editable.insertHtml().\n            // 4a) we store an undo-snapshot\n            editor.fire('saveSnapshot');\n            const ranges = editor.getSelection().getRanges();\n            if (ranges.length) {\n                const range = ranges[0];\n                // 4b) then we manually insert text -- this works WITHOUT splitting the span into different parts.\n                range.insertNode(new CKEDITOR.dom.text(text));\n                // 4c) then, we move the cursor to the end of the just inserted text.\n                range.setStart(range.endContainer, range.endOffset);\n                range.select();\n            }\n            // 4d) finally, we store another undo snapshot (after the whole execution completed)\n            setTimeout(() => editor.fire('saveSnapshot'), 0);\n        }\n    }\n\n    CKEDITOR.plugins.add('neos_fixPasteIntoInlineElements', {\n        init(editor) {\n            editor.on('paste', paste);\n        }\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/ckeditor/fixPasteIntoInlineElements.js","import neosPlaceholder from './neosPlaceholder';\nimport fixPasteIntoInlineElements from './fixPasteIntoInlineElements';\n\nexport default CKEDITOR => {\n    neosPlaceholder(CKEDITOR);\n    fixPasteIntoInlineElements(CKEDITOR);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/ckeditor/index.js","// Code from https://github.com/AlfonsoML/confighelper/blob/master/plugin.js originally, with the following (heavy) modifications:\n\n// If the data is \"empty\" (BR, P) or the placeholder then return an empty string.\n// Otherwise return the original data\nconst htmlIsEmptyish = data => {\n    if (!data) {\n        return true;\n    }\n\n    if (data.length > 20) {\n        return false;\n    }\n\n    const value = data.replace(/[\\n|\\t|\\u200b]*/g, '').toLowerCase().trim();\n    return (\n        !value ||\n        value === '<br>' ||\n        value === '<p>&nbsp;<br></p>' ||\n        value === '<p><br></p>' ||\n        value === '<p>&nbsp;</p>' ||\n        value === '&nbsp;' ||\n        value === '&nbsp;<br>' ||\n        value === ' <br>' ||\n        value.match(/^<([a-z0-9]+)><br><\\/\\1>$/)\n    );\n};\n\nexport default CKEDITOR => {\n    function addPlaceholder(event) {\n        const editor = event.editor;\n        const editable = editor.editable();\n        if (!editable) {\n            return;\n        }\n\n        if (editor.mode === 'wysiwyg') {\n            // we only support wysiwyg editor mode\n            // If the blur is due to a dialog, don't apply the placeholder\n            if (CKEDITOR.dialog._.currentTop) {\n                return;\n            }\n\n            if (htmlIsEmptyish(editable.getHtml())) {\n                editable.setHtml(editor.config.neosPlaceholder);\n                editable.addClass('placeholder');\n            }\n        }\n    }\n\n    function removePlaceholder(event) {\n        const editor = event.editor;\n        const editable = editor.editable();\n        if (!editable) {\n            return;\n        }\n\n        if (editor.mode === 'wysiwyg') {\n            if (!editable.hasClass('placeholder')) {\n                // no placeholder, so nothing to be removed.\n                return;\n            }\n\n            editable.removeClass('placeholder');\n\n            // IF: editable allows a \"P\" inside, we create a \"newline\".\n            // NOTE: this condition might not be good enough; we might need to check for block level elements using CKEDITOR.dtd.$block\n            if (CKEDITOR.dtd[editable.getName()].p) {\n                if (editor.config.autoParagraph) {\n                    editable.setHtml('<p><br/></p>');\n                } else {\n                    editable.setHtml('');\n                }\n\n                // Set caret in position\n                if (editable.getFirst()) {\n                    const range = editor.createRange();\n                    range.moveToElementEditablePosition(editable.getFirst(), true);\n                    editor.getSelection().selectRanges([range]);\n                }\n                editor.editable().$.click();\n            } else {\n                // if we are inside an inline editable (e.g. a span), we have to set the selection\n                // *using a timeout*, otherwise it won't be selected in Firefox and Chrome.\n                editable.setHtml(' ');\n\n                window.setTimeout(() => {\n                    if (editable.getFirst()) {\n                        const range = editor.createRange();\n                        range.moveToElementEditablePosition(editable.getFirst(), true);\n                        editor.getSelection().selectRanges([range]);\n                    }\n                    editor.editable().$.click();\n                }, 5);\n            }\n        }\n    }\n\n    CKEDITOR.plugins.add('neos_placeholder', {\n        getPlaceholderCss() {\n            return '.placeholder{ color: #999; }';\n        },\n\n        onLoad() {\n            CKEDITOR.addCss(this.getPlaceholderCss());\n        },\n\n        init(editor) {\n            if (editor.config.neosPlaceholder) {\n                // Watch for the calls to getData to remove the placeholder\n                editor.on('getData', event => {\n                    const element = editor.editable();\n\n                    if (element && element.hasClass('placeholder')) {\n                        event.data.dataValue = '';\n                    }\n                });\n\n                // Watch for setData to remove placeholder class\n                editor.on('setData', event => {\n                    if (CKEDITOR.dialog._.currentTop) {\n                        return;\n                    }\n\n                    const editable = editor.editable();\n\n                    if (!editable) {\n                        return;\n                    }\n\n                    if (htmlIsEmptyish(event.data.dataValue)) {\n                        // if data is empty, set it to the placeholder\n                        addPlaceholder(event);\n                    } else if (editable.hasClass('placeholder')) {\n                        // Remove the class if new data is not empty\n                        editable.removeClass('placeholder');\n                    }\n                });\n\n                editor.on('mode', addPlaceholder);\n                editor.on('blur', addPlaceholder);\n                editor.on('contentDom', addPlaceholder);\n                editor.on('focus', removePlaceholder);\n                editor.on('beforeModeUnload', removePlaceholder);\n            }\n        }\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/ckeditor/neosPlaceholder.js","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport registerNeosCkeditorPlugins from './ckeditor/index';\nimport removeTags from './ckeditor/removeTags';\n\nconst noop = {\n    initialize() {},\n    toggleFormat() {},\n    createEditor() {}\n};\n\n// We cache the \"formattingUnderCursor\"; to only emit events when it really changed.\n// As there is only a single cursor active at any given time, it is safe to do this caching here inside the singleton object.\nlet lastFormattingUnderCursorSerialized = '';\n\nconst createCKEditorAPI = CKEDITOR => {\n    if (!CKEDITOR) {\n        console.error('CKEditor not found!');\n\n        //\n        // Return noop to not break things\n        //\n        return noop;\n    }\n\n    registerNeosCkeditorPlugins(CKEDITOR);\n\n    // an object with the following keys:\n    // - globalRegistry\n    // - setFormattingUnderCursor\n    // - setCurrentlyEditedPropertyName\n    let editorConfig = null;\n    let currentEditor = null;\n\n    const handleUserInteractionCallbackFactory = editor => () => {\n        const formattingUnderCursor = {};\n        Object.keys(editorConfig.formattingRules).forEach(key => {\n            const formattingRule = editorConfig.formattingRules[key];\n\n            if (formattingRule.command !== undefined) {\n                if (!editor.getCommand(formattingRule.command)) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                formattingUnderCursor[key] = editor.getCommand(formattingRule.command).state;\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!editor.elementPath()) {\n                    formattingUnderCursor[key] = false;\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n\n                formattingUnderCursor[key] = style.checkActive(editor.elementPath(), editor);\n                return;\n            }\n\n            if (formattingRule.extractCurrentFormatFn) {\n                formattingUnderCursor[key] = formattingRule.extractCurrentFormatFn(editor, CKEDITOR);\n                return;\n            }\n\n            throw new Error(`\n                An error occured while checking a format in CK Editor.\n                The description parameter needs to either have a key \"command\",\n                a key \"style\", or a style \"extractCurrentFormatFn\" - none of which could be found.\n            `);\n        });\n\n        const formattingUnderCursorSerialized = JSON.stringify(formattingUnderCursor);\n        if (formattingUnderCursorSerialized !== lastFormattingUnderCursorSerialized) {\n            editorConfig.setFormattingUnderCursor(formattingUnderCursor);\n            lastFormattingUnderCursorSerialized = formattingUnderCursorSerialized;\n        }\n    };\n\n    //\n    // Perform global initialization tasks\n    //\n    CKEDITOR.disableAutoInline = true;\n\n    //\n    // Workaround as per http://stackoverflow.com/questions/14575036/enable-ckeditor4-inline-on-span-and-other-inline-tags\n    // The issue won't be fixed, we have to live with this...\n    //\n    Object.assign(CKEDITOR.dtd.$editable, {\n        b: true,\n        big: true,\n        i: true,\n        small: true,\n        tt: true,\n        abbr: true,\n        acronym: true,\n        cite: true,\n        code: true,\n        dfn: true,\n        em: true,\n        kbd: true,\n        strong: true,\n        samp: true,\n        var: true,\n        a: true,\n        bdo: true,\n        img: true,\n        q: true,\n        span: true,\n        sub: true,\n        sup: true,\n        button: true,\n        label: true\n    });\n\n    // Public (singleton) API for CK editor\n    return {\n        initialize(_editorConfig) {\n            editorConfig = _editorConfig;\n        },\n\n        toggleFormat(formatting, formattingOptions = {}) {\n            const formattingRule = editorConfig.formattingRules[formatting];\n            if (!formattingRule) {\n                console.warn(`Formatting instruction ${formatting} not found.`);\n                return;\n            }\n            if (!currentEditor) {\n                console.warn('Current editor not found!');\n                return;\n            }\n            if (formattingRule.command !== undefined) {\n                if (!currentEditor.getCommand(formattingRule.command)) {\n                    console.warn(`Command ${currentEditor} not found.`);\n                    return;\n                }\n\n                currentEditor.execCommand(formattingRule.command);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.style !== undefined) {\n                if (!currentEditor.elementPath()) {\n                    return;\n                }\n\n                const style = new CKEDITOR.style(formattingRule.style); // eslint-disable-line babel/new-cap\n                const operation = style.checkActive(currentEditor.elementPath(), currentEditor) ?\n                    'removeStyle' : 'applyStyle';\n\n                currentEditor[operation](style);\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            if (formattingRule.applyStyleFn) {\n                formattingRule.applyStyleFn(formattingOptions, currentEditor, CKEDITOR);\n\n                currentEditor.fire('change');\n                handleUserInteractionCallbackFactory(currentEditor)();\n                return;\n            }\n\n            throw new Error(`\n                An error occured while applying a format in CK Editor.\n                The description parameter needs to either have a key \"command\",\n                \"style\", or \"applyFn\" - none of which could be found.\n            `);\n        },\n\n        createEditor(dom, finalOptions, propertyName, onChange) {\n            if (CKEDITOR.dtd.$inline[dom.tagName.toLowerCase()]) {\n                // if we are an inline element, CKEditor breaks if we contain block-level children\n                const containsBlockLevelChildren = [].slice.call(dom.childNodes).some(childNode => childNode.tagName && CKEDITOR.dtd.$block[childNode.tagName.toLowerCase()]);\n                if (containsBlockLevelChildren) {\n                    console.warn('The editable ', dom, ' of type <', dom.tagName.toLowerCase(), '> (which is an inline html element) contains block-level children (like p, div, ...). This is invalid markup and currently not supported by CKEditor; that is why we cannot edit it currently.');\n\n                    const onClickRemoveTags = () => {\n                        const text = removeTags(dom.innerHTML, CKEDITOR);\n                        dom.innerHTML = text;\n                        this.createEditor(dom, finalOptions, propertyName, onChange);\n\n                        dom.removeEventListener('click', onClickRemoveTags);\n                        // TODO FOCUS EDITOR directly - would be nice!\n                    };\n\n                    dom.addEventListener('click', onClickRemoveTags);\n                    return;\n                }\n            }\n            dom.contentEditable = 'true';\n\n            const editor = CKEDITOR.inline(dom, finalOptions);\n\n            editor.on('loaded', () => {\n                if (editor.config.buttons) {\n                    editor.config.buttons.forEach(button => {\n                        // The next two lines actually do the ACF auto-configuration\n                        const editorFeature = editor.ui.create(button);\n                        editor.addFeature(editorFeature);\n                    });\n                }\n            });\n\n            const handleUserInteraction = handleUserInteractionCallbackFactory(editor);\n\n            editor.once('contentDom', () => {\n                editor.on('focus', () => {\n                    currentEditor = editor;\n                    editorConfig.setCurrentlyEditedPropertyName(propertyName);\n\n                    handleUserInteraction();\n                });\n\n                editor.on('selectionChange', () => {\n                    handleUserInteraction();\n                });\n\n                editor.on('change', debounce(throttle(() => onChange(editor.getData()), 1500), 150));\n            });\n        }\n    };\n};\n\nexport default createCKEditorAPI(window.CKEDITOR);\n\n\n\n// WEBPACK FOOTER //\n// ./packages/neos-ui-ckeditor-bindings/src/guestFrameApi.js"],"sourceRoot":""}